#
# This config contains behaviour data: Thread allocation, allowed fields for lookup, limits for arguments etc.
#
# The behaviour config is normally controlled by developers and is part of the code repository.
# Sensitive information such as machine names and user/passwords should not be part of this config.
#
# It will be automatically merged with the environment config when accessed through the
# application config system.
#
#
config:
  limits:
    min: 10
    max: 100
  mylist:
    - Hello
    - World
    - from
    - java-template

# The entries below are just place holders.
#  
# There should be a corresponding `-environment.yaml`-file with the structure below, but with real values.
# The entries in the environment-YAML will override the ones in the behaviour-YAML. The sole purpose of having the
# structure in the behaviour-YAML is to document what needs to be defined in the environment.
  backend:
    # The URL for the backend service
    # Sample: http://localhost:9060/poc-backend/v1
    url: 'http://localhost:9060/poc-backend/v1'

  security:
    # The security mode. Valid values are
    # OFFLINE: No validation of security tokens: All requests are accepted.
    # ENABLED (or no mode set): Validation of security tokens.
    mode: 'ENABLED'
    baseurl: 'https://keycloak-keycloak.example.org/auth/realms'
    realms:
      - developers
      - test
      - integrationtest
      - tryout
    public_keys:
      # The number of seconds that public keys from the realms are cached
      # Optional, -1 means forever.
      # Default is 600 (10 minutes)
      ttl_seconds: 86400

    # Below only used for getting tokens
    client_id: 'test' # Matches Keycloak Client ID
    # Used for application<->application (service account: client_id + secret)
    # Or for client->application (client fetches a token)
    client_secret: '8ebc0aeb-1ae8-4474-851b-270ae79fdc11'
